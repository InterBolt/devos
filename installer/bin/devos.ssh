#!/usr/bin/env bash

# shellcheck source=devos.static
source "devos.static"

ssh._validate() {
  if [ -z "$vENV_NAME" ]; then
    log.error "vENV_NAME must be non empty. Exiting."
    exit 1
  fi
  if [ -z "${!vENV_IP+x}" ]; then
    log.error "vENV_IP must be defined. Exiting."
    exit 1
  fi
}
ssh._require_ip() {
  if [ -z "${vENV_IP}" ]; then
    log.error "vENV_IP must be defined. Exiting."
    exit 1
  fi
}
ssh.cmd.local() {
  ssh._validate
  local cmd="$1"
  shift
  ssh -p 2222 -i "$(ssh.path_privkey.self)" -o StrictHostKeyChecking=no -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null "$@" root@127.0.0.1 "$cmd"
}
ssh.cmd.remote() {
  ssh._validate
  ssh._require_ip
  local cmd="$1"
  shift
  ssh -i "$(ssh.path_privkey.self)" -o StrictHostKeyChecking=no -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null "$@" root@"$vENV_IP" "$cmd"
}
ssh.rsync_up.local() {
  ssh._validate
  local source="$1"
  shift
  local target="$2"
  shift
  rsync --checksum -a -e "ssh -p 2222 -i $(ssh.path_privkey.self) -o StrictHostKeyChecking=no -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null" "$@" "$source" root@127.0.0.1:"$target"
}
ssh.rsync_down.local() {
  ssh._validate
  local source="$1"
  shift
  local target="$2"
  shift
  rsync --checksum -a -e "ssh -p 2222 -i $(ssh.path_privkey.self) -o StrictHostKeyChecking=no -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null" "$@" root@127.0.0.1:"$target" "$source"
}
ssh.rsync_up.remote() {
  ssh._validate
  ssh._require_ip
  local source="$1"
  shift
  local target="$2"
  shift
  rsync --checksum -a -e "ssh -i $(ssh.path_privkey.self) -o StrictHostKeyChecking=no -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null" "$@" "$source" root@"$vENV_IP":"$target"
}
ssh.rsync_down.remote() {
  ssh._validate
  ssh._require_ip
  local source="$1"
  shift
  local target="$2"
  shift
  rsync --checksum -a -e "ssh -i $(ssh.path_privkey.self) -o StrictHostKeyChecking=no -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null" "$@" root@"$vENV_IP":"$target" "$source"
}
ssh.cat_pubkey.self() {
  if [ -f "$vSTATIC_SELF_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_PUB_KEYNAME" ]; then
    cat "$vSTATIC_SELF_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_PUB_KEYNAME"
  else
    echo ""
  fi
}
ssh.cat_pubkey.debian() {
  if [ -f "$vSTATIC_DEBIAN_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_PUB_KEYNAME" ]; then
    cat "$vSTATIC_DEBIAN_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_PUB_KEYNAME"
  else
    echo ""
  fi
}
ssh.path_privkey.self() {
  if [ -f "$vSTATIC_SELF_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_RSA_KEYNAME" ]; then
    echo "$vSTATIC_SELF_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_RSA_KEYNAME"
  else
    echo ""
  fi
}
ssh.path_privkey.debian() {
  if [ -f "$vSTATIC_DEBIAN_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_RSA_KEYNAME" ]; then
    echo "$vSTATIC_DEBIAN_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_RSA_KEYNAME"
  else
    echo ""
  fi
}
ssh.path_authorized_keys.self() {
  if [ -f "$vSTATIC_SELF_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_AUTHORIZED_KEYS_FILENAME" ]; then
    echo "$vSTATIC_SELF_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_AUTHORIZED_KEYS_FILENAME"
  else
    echo ""
  fi
}
ssh.path_authorized_keys.debian() {
  if [ -f "$vSTATIC_DEBIAN_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_AUTHORIZED_KEYS_FILENAME" ]; then
    echo "$vSTATIC_DEBIAN_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_AUTHORIZED_KEYS_FILENAME"
  else
    echo ""
  fi
}
ssh.path_config.self() {
  if [ -f "$vSTATIC_SELF_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_CONFIG_FILENAME" ]; then
    echo "$vSTATIC_SELF_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_CONFIG_FILENAME"
  else
    echo ""
  fi
}
ssh.path_config.debian() {
  if [ -f "$vSTATIC_DEBIAN_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_CONFIG_FILENAME" ]; then
    echo "$vSTATIC_DEBIAN_ROOT/$vENV_NAME/.ssh/$vSTATIC_SSH_CONFIG_FILENAME"
  else
    echo ""
  fi
}
