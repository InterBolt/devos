#!/usr/bin/env bash
# shellcheck disable=SC2155
set -o errexit
set -o pipefail
set -o errtrace
cd "$(dirname "${BASH_SOURCE[0]}")"

BIN_LIB_LOCATION="$HOME/.devos/bin"
BIN_LOCATION="/usr/local/bin"
LIB_SCRIPTS=(
  "lib.cache"
  "lib.flags"
  "base.logs"
  "lib.status"
  "lib.utils"
)
BIN_SCRIPT="devos"
#
# A copy/paste of the base.logs file.
#
log.info() {
  # shellcheck disable=SC2046,SC2059
  echo -e $(printf "\e[34minfo:\e[0m $1")
}
log.debug() {
  # shellcheck disable=SC2046,SC2059
  echo -e $(printf "\e[36mdebug:\e[0m $1")
}
log.success() {
  # shellcheck disable=SC2046,SC2059
  echo -e $(printf "\e[32msuccess:\e[0m $1")
}
log.error() {
  # shellcheck disable=SC2046,SC2059
  echo -e $(printf "\e[31merror:\e[0m $1")
}
log.warn() {
  # shellcheck disable=SC2046,SC2059
  echo -e $(printf "\e[33mwarn:\e[0m $1")
}
#
# Download the libs we need to source to the .devos directory
# and download the actual bin script to /usr/local/bin.
#
wget --quiet "https://raw.githubusercontent.com/InterBolt/devos/main/bin/devos" -O "$BIN_LIB_LOCATION/$BIN_SCRIPT"
chmod +x "$BIN_LIB_LOCATION/$BIN_SCRIPT"
for lib_script in "${LIB_SCRIPTS[@]}"; do
  wget --quiet "https://raw.githubusercontent.com/InterBolt/devos/main/bin/$lib_script" -O "$BIN_LIB_LOCATION/$lib_script"
  chmod +x "$BIN_LIB_LOCATION/$lib_script"
done

if [ -f "$BIN_LOCATION/$BIN_SCRIPT" ]; then
  log.warn "removing existing devos script from $BIN_LOCATION."
  rm -f "$BIN_LOCATION/$BIN_SCRIPT"
fi
#
# The actual bin script will live in the .devos folder for max portability.
# This way when restoring on old system, the restoration script can simply
# add the .devos/bin/devos file to the user's PATH without needing to
# remember which version they were using.
#
{
  echo "#!/usr/bin/env bash"
  echo ""
  echo "# This script was generated by the devos installer at $(date)."
  echo ""
  echo "source \"$BIN_LIB_LOCATION/$BIN_SCRIPT\""
} >>"$BIN_LOCATION/$BIN_SCRIPT"
log.success "devos script has been installed to $BIN_LOCATION."
log.info "run 'devos --help' to get started."
