#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o errtrace
cd "$(dirname "${BASH_SOURCE[0]}")"
#
# Important: please use "i" prefix to avoid conflicts with other scripts
# we source remotely.
#
# shellcheck source=devos.static
source <(curl -H 'Cache-Control: no-cache' -s "https://raw.githubusercontent.com/InterBolt/devos/main/installer/bin/devos.static")
# iINSTALL_DIR_EXISTED=false
# if [ -d "$vSTATIC_MY_CONFIG_ROOT" ]; then
#   iINSTALL_DIR_EXISTED=true
# fi
echo "$vSTATIC_MY_CONFIG_ROOT"
exit 0
mkdir -p "$vSTATIC_MY_CONFIG_ROOT"
# shellcheck source=shared.log.sh
source <(curl -H 'Cache-Control: no-cache' -s "https://raw.githubusercontent.com/InterBolt/devos/main/installer/bin/shared.log.sh")
log.ready "installer"
#
# Will download the bin script + all lib scripts to the user's local
# devos config folder at config/bin/.
# Then, the main executable will be simply call the main script as a command.
#
iEXECUTABLE_NAME="devos"
iMY_CONFIG_BIN="$vSTATIC_MY_CONFIG_ROOT/bin"
iUSR_LOCAL_BIN_EXECUTABLE="/usr/local/bin/${iEXECUTABLE_NAME}"
iREPO_BIN_SCRIPTS=(
  "devos"
  "devos.cache"
  "devos.environment"
  "devos.flags"
  "devos.ssh"
  "devos.static"
  "devos.status"
  "devos.test"
  "devos.utils"
  "devos.precheck"
  "devos.vultr"
  "shared.log.sh"
)
iBIN_SCRIPT_COMMENT_TAG="# github:interbolt/devos"
if [ "$iINSTALL_DIR_EXISTED" == true ]; then
  log.warn "will overwrite files at $iMY_CONFIG_BIN/"
  log.warn "if you want to keep your existing files, please back them up before continuing."
  log.warn "press enter to continue or ctrl+c to cancel."
  read -r
  rm -rf "$iMY_CONFIG_BIN"
fi
mkdir -p "$iMY_CONFIG_BIN"
#
# Downloads bootfiles from the devos repository and saves them in
# the users config/bin directory. All devos projects will share the same
# executable.
#
for bin_script in "${iREPO_BIN_SCRIPTS[@]}"; do
  rm -f "$iMY_CONFIG_BIN/$bin_script"
  wget --quiet --header="Cache-Control: no-cache" "https://raw.githubusercontent.com/InterBolt/devos/main/installer/bin/$bin_script" -O "$iMY_CONFIG_BIN/$bin_script"
  chmod +x "$iMY_CONFIG_BIN/$bin_script"
done
#
# For extra safety, we'll see if the script looks like something we've installed before
# based on the second line of the script, which is a distinct comment.
# If it does, we'll overwrite it.
#
if [ -f "$iUSR_LOCAL_BIN_EXECUTABLE" ]; then
  if [ "$(sed -n '2p' "$iUSR_LOCAL_BIN_EXECUTABLE")" == "$iBIN_SCRIPT_COMMENT_TAG" ]; then
    log.warn "overwriting $iUSR_LOCAL_BIN_EXECUTABLE"
    rm -f "$iUSR_LOCAL_BIN_EXECUTABLE"
  else
    log.error "cannot overwrite $iUSR_LOCAL_BIN_EXECUTABLE. It exists but is not a devos script."
    exit 1
  fi
fi
#
# The actual bin script will live in the .devos folder for max portability.
# This way when restoring on old system, the script will still work without needing
# to be reinstalled or finding the original script version.
#
{
  echo "#!/usr/bin/env bash"
  echo "$iBIN_SCRIPT_COMMENT_TAG"
  echo "# This script was generated by the devos installer at $(date)."
  echo ""
  echo "\"$iMY_CONFIG_BIN/$iEXECUTABLE_NAME\" \"\$@\""
} >>"$iUSR_LOCAL_BIN_EXECUTABLE"
chmod +x "$iUSR_LOCAL_BIN_EXECUTABLE"
log.success "success: devos installed at: $iUSR_LOCAL_BIN_EXECUTABLE"
log.info "run 'devos --help' to get started."
