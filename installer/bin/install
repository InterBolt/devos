#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o errtrace
cd "$(dirname "${BASH_SOURCE[0]}")"
#
# Important: please use "i" prefix to avoid conflicts with other scripts
# we source remotely.
#
#
# clone the devos repository to a tmp dir, make files executable, and source
# any lib scripts.
#
iTMP_DIR="$(mktemp -d 2>/dev/null)"
iMY_TMP_CONFIG_BIN_DIR="$(mktemp -d 2>/dev/null)"
i.cleanup() {
  rm -rf "$iTMP_DIR"
  rm -rf "$iMY_TMP_CONFIG_BIN_DIR"
}
trap "i.cleanup" EXIT
cd "$iTMP_DIR"
git clone "https://github.com/InterBolt/devos.git" >/dev/null 2>&1
cd devos
find . -type f -name "*.sh" -exec chmod +x {} \;
cd installer/bin
iPATH_TO_SOURCE_BIN_SCRIPTS="$PWD"
#
# Source anything we need an make sure the user has a
# config dir in the home folder.
#
# shellcheck source=devos.static
source "devos.static"
iINSTALL_DIR_EXISTED=false
if [ -d "$vSTATIC_MY_CONFIG_ROOT" ]; then
  iINSTALL_DIR_EXISTED=true
fi
mkdir -p "$vSTATIC_MY_CONFIG_ROOT"
# shellcheck source=shared.log.sh
source "shared.log.sh"
log.ready "installer"
#
# Will download the bin script + all lib scripts to the user's local
# devos config folder at config/bin/.
# Then, the main executable at the user's path can call the main script as a command.
#
iEXECUTABLE_NAME="devos"
iMY_CONFIG_BIN="$vSTATIC_MY_CONFIG_ROOT/bin"
iUSR_LOCAL_BIN_EXECUTABLE="/usr/local/bin/${iEXECUTABLE_NAME}"
iBIN_SCRIPT_COMMENT_TAG="# github:interbolt/devos"
#
# Warn the user about the consequences of overwriting files.
#
if [ "$iINSTALL_DIR_EXISTED" == true ]; then
  log.warn "will overwrite files at $iMY_CONFIG_BIN/"
fi
# for bin_script in "${iREPO_BIN_SCRIPTS[@]}"; do
#   cp -a "$iPATH_TO_SOURCE_BIN_SCRIPTS/$bin_script" "$iMY_TMP_CONFIG_BIN_DIR/$bin_script"
# done
for bin_script in "$iPATH_TO_SOURCE_BIN_SCRIPTS"/*; do
  echo "bin_script: $bin_script"
  cp -a "$bin_script" "$iMY_TMP_CONFIG_BIN_DIR/$(basename "$bin_script")"
done
exit 0
#
# The move happens after a successful series of copies to avoid partial installs.
#
mv -f "$iMY_TMP_CONFIG_BIN_DIR" "$iMY_CONFIG_BIN"
#
# For extra safety, we'll see if the script looks like something we've installed before
# based on the second line of the script, which is a distinct comment.
# If it does, we're safe to overwrite it.
#
if [ -f "$iUSR_LOCAL_BIN_EXECUTABLE" ]; then
  if [ "$(sed -n '2p' "$iUSR_LOCAL_BIN_EXECUTABLE")" == "$iBIN_SCRIPT_COMMENT_TAG" ]; then
    log.warn "overwriting $iUSR_LOCAL_BIN_EXECUTABLE"
    rm -f "$iUSR_LOCAL_BIN_EXECUTABLE"
  else
    log.error "line: \`$iBIN_SCRIPT_COMMENT_TAG\` was not found in $iUSR_LOCAL_BIN_EXECUTABLE. can't verify that it was installed by devos."
    exit 1
  fi
fi
#
# The actual bin script will live in the .devos folder for max portability.
# This way when restoring on old system, the script will still work without needing
# to be reinstalled or finding the original script version.
#
{
  echo "#!/usr/bin/env bash"
  echo "$iBIN_SCRIPT_COMMENT_TAG"
  echo "# This script was generated by the devos installer at $(date)."
  echo ""
  echo "\"$iMY_CONFIG_BIN/$iEXECUTABLE_NAME\" \"\$@\""
} >>"$iUSR_LOCAL_BIN_EXECUTABLE"
chmod +x "$iUSR_LOCAL_BIN_EXECUTABLE"
log.success "success: devos installed at: $iUSR_LOCAL_BIN_EXECUTABLE"
log.info "run 'devos --help' to get started."
