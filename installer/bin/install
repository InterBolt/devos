#!/usr/bin/env bash
# shellcheck disable=SC2155
set -o errexit
set -o pipefail
set -o errtrace
cd "$(dirname "${BASH_SOURCE[0]}")"

# shellcheck source=devos.static
source <(curl -s "https://raw.githubusercontent.com/InterBolt/devos/main/installer/bin/devos.static")

BIN_LIB_LOCATION="$vSTATIC_MY_CONFIG_ROOT/bin"
BIN_LOCATION="/usr/local/bin"
LIB_SCRIPTS=(
  "devos.cache"
  "devos.flags"
  "devos.ssh"
  "devos.static"
  "devos.status"
  "devos.utils"
  "devos.vultr"
  "shared.log.sh"
)
BIN_SCRIPT="devos"

log.ready ""

mkdir -p "$BIN_LIB_LOCATION"
#
# Download the libs we need to source to the .devos directory
# and download the actual bin script to /usr/local/bin.
#
rm -f "$BIN_LIB_LOCATION/$BIN_SCRIPT"
wget --quiet --header="Cache-Control: no-cache" "https://raw.githubusercontent.com/InterBolt/devos/main/installer/bin/devos" -O "$BIN_LIB_LOCATION/$BIN_SCRIPT"
chmod +x "$BIN_LIB_LOCATION/$BIN_SCRIPT"
for lib_script in "${LIB_SCRIPTS[@]}"; do
  rm -f "$BIN_LIB_LOCATION/$lib_script"
  wget --quiet --header="Cache-Control: no-cache" "https://raw.githubusercontent.com/InterBolt/devos/main/installer/bin/$lib_script" -O "$BIN_LIB_LOCATION/$lib_script"
  chmod +x "$BIN_LIB_LOCATION/$lib_script"
done

if [ -f "$BIN_LOCATION/$BIN_SCRIPT" ]; then
  log.warn "removing existing devos script from $BIN_LOCATION."
  rm -f "$BIN_LOCATION/$BIN_SCRIPT"
fi
#
# The actual bin script will live in the .devos folder for max portability.
# This way when restoring on old system, the script will still work without needing
# to be reinstalled or finding the original script version.
#
{
  echo "#!/usr/bin/env bash"
  echo ""
  echo "# This script was generated by the devos installer at $(date)."
  echo ""
  echo "\"$BIN_LIB_LOCATION/$BIN_SCRIPT\" \"\$@\""
} >>"$BIN_LOCATION/$BIN_SCRIPT"
chmod +x "$BIN_LOCATION/$BIN_SCRIPT"
log.success "devos script has been installed to $BIN_LOCATION."
log.info "run 'devos --help' to get started."
