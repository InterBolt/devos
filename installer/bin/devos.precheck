#!/usr/bin/env bash

# shellcheck source=devos
source "devos.static"
# shellcheck source=devos.utils
source "devos.static"
# shellcheck source=devos.static
source "devos.static"

precheck.throw_if_dangerous_dir() {
  if [ "$vCLI_OPT_DIR" == "$HOME" ]; then
    log.error "Danger: you are trying to wipe the home directory. Exiting."
    exit 1
  fi
  if [[ "$HOME" == "$vCLI_OPT_DIR"* ]]; then
    log.error "Danger: you are trying to wipe a parent directory of your home directory. Exiting."
    exit 1
  fi
}
precheck.throw_on_nondevos() {
  precheck.throw_if_dangerous_dir

  if [ ! -d "$vCLI_OPT_DIR" ]; then
    log.error "Invalid directory supplied for --dir flag: $vCLI_OPT_DIR. Exiting."
    exit 1
  fi
  if [ ! -f "$vCLI_OPT_DIR/.devos-id" ]; then
    log.error "The supplied directory does not contain a .devos-id file. Exiting."
    exit 1
  fi
}
precheck.throw_on_nondevos_dir() {
  precheck.throw_if_dangerous_dir

  if [ -d "$vCLI_OPT_DIR" ] && [ ! -f "$vCLI_OPT_DIR/.devos-id" ]; then
    log.error "The supplied directory already exists and does not contain a .devos-id file. Exiting."
  fi
}
precheck.throw_if_missing_installed_commands() {
  for cmd in "${vSTATIC_DEPENDENCY_COMMANDS[@]}"; do
    if ! command -v "$cmd" &>/dev/null; then
      log.error "pre-check failed. Install \"$cmd\" to your path and try again."
      exit 1
    fi
  done
}
precheck.docker_host_running() {
  if [ "$vSTATIC_HOST" != "local" ]; then
    log.error "this command must be run from the local host. Exiting."
    exit 1
  fi
  if [ -z "$vENV_DEVOS_ID" ]; then
    log.error "no devos id found. this is stored at $vSTATIC_MY_CONFIG_ROOT/$vSTATIC_DEVOS_ID_FILENAME"
    exit 1
  fi
  if ! docker info &>/dev/null; then
    log.error "docker desktop not running."
    exit 1
  fi
  if ! COMPOSE_PROJECT_NAME="devos-$vENV_DEVOS_ID" docker-compose ps &>/dev/null; then
    log.error "the compose project \`devos-$vENV_DEVOS_ID\` is not running."
    exit 1
  fi
}
