#!/usr/bin/env bash

set -o pipefail
set -o errtrace

viREPO_BIN_EXECUTABLE_PATH="bin/solos.sh"

spinner() {
  # make sure we use non-unicode character type locale
  # (that way it works for any locale as long as the font supports the characters)
  local LC_CTYPE=C

  local pid=$1 # Process Id of the previous running command
  local spin='⣾⣽⣻⢿⡿⣟⣯⣷'
  local charwidth=3
  local title="${2:-""}"
  local length_of_title=${#title}

  local i=0
  tput civis # cursor invisible
  while kill -0 "${pid}" 2>/dev/null; do
    local i=$(((charwidth + i) % ${#spin}))
    #
    # This should always match up with the info level color!
    #
    printf "%b" "${spin:$i:$charwidth} \e[94m${title}\e[0m"
    echo -en "\033[$((length_of_title + 2))D"
    sleep .1
  done
  echo -en "\033[K"
  tput cnorm
  wait "${pid}"
  local code=$?
  if [[ $code -ne 0 ]]; then
    log.error "installation failed with code: $code"
    log.info "tip: include the --foreground flag next time to view the output."
    exit $code
  fi
}

do_task() {
  local description="$1"
  local task="$2"
  shift 2
  if ! declare -f "$task" >/dev/null; then
    log.error "second argument must be the task function."
    exit 1
  fi
  "$task" "$@" &
  local task_pid=$!
  spinner "${task_pid}" "${description}"
}

#
# Important: please use "vi" prefix to avoid conflicts with other scripts
# we source remotely.
# Note: stands for "v" variable and "i" install.
#
viTMP_DIR="$(mktemp -d 2>/dev/null)"
viMY_TMP_CONFIG_BIN_DIR="$(mktemp -d 2>/dev/null)"
viTMP_REPO="${viTMP_DIR}/solos"
viREPO_URL="https://github.com/InterBolt/solos.git"
viUSR_LOCAL_BIN_EXECUTABLE="/usr/local/bin/solos"
viBIN_SCRIPT_COMMENT_TAG="# from:solos"

trap.cleanup() {
  rm -rf "$viTMP_DIR"
  rm -rf "$viMY_TMP_CONFIG_BIN_DIR"
}

do.clone() {
  git clone "${viREPO_URL}" "${viTMP_REPO}" &>/dev/null
  if [ ! -f "${viTMP_REPO}/${viREPO_BIN_EXECUTABLE_PATH}" ]; then
    echo "${viTMP_REPO}/${viREPO_BIN_EXECUTABLE_PATH} not found. Exiting." >&2
    exit 1
  fi
}

do.prepare() {
  #
  # Important: the remainder of the script assumes we're in the bin folder.
  #
  cd "${viTMP_REPO}/bin" || exit 1
  #
  # Source anything we need an make sure the user has a
  # config dir in the home folder.
  #
  # shellcheck source=bin/shared/static.sh
  . "shared/static.sh"
  # shellcheck source=bin/pkg/gum.sh
  . "pkg/gum.sh"

  #
  # Fundamentally, we must clone the repo before we can source the static.sh file.
  #
  #
  if [ "${viREPO_URL}" != "${vSTATIC_REPO_URL}" ]; then
    echo "repo url mismatch: ${viREPO_URL} != ${vSTATIC_REPO_URL}" >&2
    exit 1
  fi

  mkdir -p "$vSTATIC_MY_CONFIG_ROOT"
  # shellcheck source=bin/shared/log.sh
  . "shared/log.sh"
  #
  # Overwrite the bin files stored in the config folder.
  #
  rm -rf "${vSTATIC_MY_CONFIG_ROOT:?}/bin"
  mkdir -p "${vSTATIC_MY_CONFIG_ROOT:?}/bin"
  cp -r "${viTMP_REPO}/bin/." "${vSTATIC_MY_CONFIG_ROOT:?}/bin"

  #
  # For extra safety, we'll see if the script looks like something we've installed before
  # based on the second line of the script, which is a distinct comment.
  # If it does, we're safe to overwrite it.
  #
  if [ -f "$viUSR_LOCAL_BIN_EXECUTABLE" ]; then
    if [ "$(sed -n '2p' "$viUSR_LOCAL_BIN_EXECUTABLE")" == "$viBIN_SCRIPT_COMMENT_TAG" ]; then
      log.warn "overwriting $viUSR_LOCAL_BIN_EXECUTABLE"
      rm -f "$viUSR_LOCAL_BIN_EXECUTABLE"
    else
      log.error "line: \`$viBIN_SCRIPT_COMMENT_TAG\` was not found in $viUSR_LOCAL_BIN_EXECUTABLE."
      log.error "can't verify that it was installed by solos."
      exit 1
    fi
  fi

  #
  # The actual bin script will live in the .solos folder for max portability.
  # This way when restoring on old system, the script will still work without needing
  # to be reinstalled or finding the original script version.
  #
  {
    echo "#!/usr/bin/env bash"
    echo "$viBIN_SCRIPT_COMMENT_TAG"
    echo "# This script was generated by the SolOS install at $(date)."
    echo ""
    echo "\"${vSTATIC_MY_CONFIG_ROOT:?}/$viREPO_BIN_EXECUTABLE_PATH\" \"\$@\""
  } >>"$viUSR_LOCAL_BIN_EXECUTABLE"
  chmod +x "$viUSR_LOCAL_BIN_EXECUTABLE"
}

trap "trap.cleanup" EXIT
do.clone
do.prepare
log.info "success - installed at ${vSTATIC_MY_CONFIG_ROOT:?}/$viREPO_BIN_EXECUTABLE_PATH"
log.info "run 'solos --help' to get started"
