#!/usr/bin/env bash
set -o errexit
set -o pipefail
set -o errtrace
cd "$(dirname "${BASH_SOURCE[0]}")"
viREPO_BIN_EXECUTABLE_PATH="bin/solos.sh"
#
# Important: please use "vi" prefix to avoid conflicts with other scripts
# we source remotely.
# Note: stands for "v" variable and "i" install.
#
viTMP_DIR="$(mktemp -d 2>/dev/null)"
viMY_TMP_CONFIG_BIN_DIR="$(mktemp -d 2>/dev/null)"
i.cleanup() {
  rm -rf "$viTMP_DIR"
  rm -rf "$viMY_TMP_CONFIG_BIN_DIR"
}
trap "i.cleanup" EXIT
viTMP_REPO="${viTMP_DIR}/solos"
git clone "https://github.com/InterBolt/solos.git" "${viTMP_REPO}"
if [ ! -f "${viTMP_REPO}/${viREPO_BIN_EXECUTABLE_PATH}" ]; then
  echo "${viTMP_REPO}/${viREPO_BIN_EXECUTABLE_PATH} not found. Exiting."
  exit 1
fi
cd "${viTMP_REPO}"
#
# Source anything we need an make sure the user has a
# config dir in the home folder.
#
# shellcheck source=bin/shared/static.sh
. "bin/shared/static.sh"
mkdir -p "$vSTATIC_MY_CONFIG_ROOT"
# shellcheck source=bin/shared/log.sh
. "bin/shared/log.sh"
log.ready "installer" "${vSTATIC_MY_CONFIG_ROOT}/${vSTATIC_LOGS_DIRNAME}"
log.info "installing solos..."
#
# Will download the bin script + all lib scripts to the user's local
# solos config folder at config/bin/.
# Then, the main executable at the user's path can call the main script as a command.
#
viUSR_LOCAL_BIN_EXECUTABLE="/usr/local/bin/solos"
viBIN_SCRIPT_COMMENT_TAG="# from:solos"

rm -rf "${vSTATIC_MY_CONFIG_ROOT:?}/bin"
mkdir -p "${vSTATIC_MY_CONFIG_ROOT:?}/bin"
cp -r "${viTMP_REPO}/bin/." "${vSTATIC_MY_CONFIG_ROOT:?}/bin"
#
# For extra safety, we'll see if the script looks like something we've installed before
# based on the second line of the script, which is a distinct comment.
# If it does, we're safe to overwrite it.
#
if [ -f "$viUSR_LOCAL_BIN_EXECUTABLE" ]; then
  if [ "$(sed -n '2p' "$viUSR_LOCAL_BIN_EXECUTABLE")" == "$viBIN_SCRIPT_COMMENT_TAG" ]; then
    log.warn "overwriting $viUSR_LOCAL_BIN_EXECUTABLE"
    rm -f "$viUSR_LOCAL_BIN_EXECUTABLE"
  else
    log.error "line: \`$viBIN_SCRIPT_COMMENT_TAG\` was not found in $viUSR_LOCAL_BIN_EXECUTABLE."
    log.error "can't verify that it was installed by solos."
    exit 1
  fi
fi
#
# The actual bin script will live in the .solos folder for max portability.
# This way when restoring on old system, the script will still work without needing
# to be reinstalled or finding the original script version.
#
{
  echo "#!/usr/bin/env bash"
  echo "$viBIN_SCRIPT_COMMENT_TAG"
  echo "# This script was generated by the SolOS installer at $(date)."
  echo ""
  echo "\"${vSTATIC_MY_CONFIG_ROOT:?}/$viREPO_BIN_EXECUTABLE_PATH\" \"\$@\""
} >>"$viUSR_LOCAL_BIN_EXECUTABLE"
chmod +x "$viUSR_LOCAL_BIN_EXECUTABLE"
log.info "success: solos installed"
log.info "at: ${vSTATIC_MY_CONFIG_ROOT:?}/$viREPO_BIN_EXECUTABLE_PATH"
log.info "run 'solos --help' to get started."
